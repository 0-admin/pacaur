=head1 NAME

pacaur - a fast workflow AUR helper using cower as backend

=head1 SYNOPSIS

Usage: I<pacaur> E<lt>operationE<gt> [ options ] [ package(s) ]

=head1 DESCRIPTION

Pacaur is an Arch User Repository (AUR) helper aiming at speed and simplicity,
designed to minimize user prompt interaction and to use an uncluttered
interface. It is built upon the well designed cower and expac C backends.
Invoking pacaur consists of supplying an operation, any applicable options, and
usually one or more targets.

=head1 USERBASE TARGET

Pacaur provides two sets of command line options: commands which call the pacman
binary and extend for AUR functions B<(-S, -Q)>, and commands which are AUR
specific B<(-s, -i, -d, -m, -y, -k, -u)>. As such, pacaur can be used by users
who prefer to have a single tool to manage officials and AUR repositories, or by
users who prefer to keep their AUR frontend separated from pacman.

Fundamental knowledge of the AUR manual build process with makepkg is assumed to
be known.

=head1 OPERATIONS

=over 4

=item B<-S, -Ss, -Si, -Sii, -Sw, -Su, -Qu, -Sc, -Scc>

Pacaur wraps B<pacman operations> and extends respectively its install, search,
info, download, update, check updates and clean functions to the AUR. This
behavior is optional and can be disabled with the I<fallback> variable in the
config file. Pacaur will also pass any pacman related options to the pacman
binary.

=item B<-s, --search>

Search for packages with the I<target>(s) as the search term(s). Queries with
multiple targets will return the result of the intersection of all query
results. Extended regex patterns as defined by POSIX are allowed.

=item B<-i, --info>

Show info for I<target>. Pass this option twice to fetch more detailed info.

=item B<-d, --download>

Download I<target>(s) PKGBUILD. Pass this option twice to fetch dependencies
(done recursively).

=item B<-m, --makepkg>

Download I<target>(s) PKGBUILD and build target(s). Missing dependencies will be
installed as required to ensure the build to succeed, before being automatically
uninstalled.

=item B<-y, --sync>

Download I<target>(s) PKGBUILD, build and install target(s). Missing
dependencies will be automatically installed as required.

=item B<-k, --check>

Check foreign packages for updates in the AUR. Without any arguments, all
manually installed packages will be checked. If targets are supplied, only
those targets will be checked.

=item B<-u, --update>

Update foreign packages in the AUR. Without any arguments, all manually
installed packages will be updated. If targets are supplied, only those targets
will be updated.

=item B<-v, --version>

Display version and quit.

=item B<-h, --help>

Display the help message and quit.

=item B<--fixbackend>

When I<cower> backend breaks following an update, attempt to fix it by quickly
rebuilding it.

=back


=head1 OPTIONS

=over 4

=item B<-e, --edit>

Edit I<target>(s) PKGBUILD and view install script when downloading or building
target(s). Can also be used as a standalone command.

=item B<-c, --clean>

Remove I<target>(s) build files after building target(s). Pass this option twice
to force cleaning when the cleandevel option is disabled. Can also be used as a
standalone command. When passed twice without any arguments, clean the entire
build directory.

=item B<-q, --quiet>

Show less information for search and query operations. Search will only show
package names and not version, group, and description information.

=item B<-a, --aur>

When used with pacman extended operations, only search or install packages from
the AUR.

=item B<-r, --repo>

When used with pacman extended operations, only search or install packages from
the repositories.

=item B<-f, --force>

Overwrite existing files when downloading.

=item B<--devel>

When used with update operations, also upgrade AUR development packages
(supported are cvs, svn, git, hg, bzr and darcs development packages).

=item B<--ignore> I<package(s)>

Ignore a package upgrade. Can be used more than once. Also accepts a comma
delimited list as a single argument. Packages listed in pacman and cower's
IgnorePkg directive are honored.

=item B<--noconfirm>

Perform commands without confirmation from the user.

=item B<--noedit>

Perform commands without editing any installation files. Bypass --edit option.

=item B<--rebuild>

Always rebuild package(s) regardless of any existing file in $PKGDEST directory.

=item B<--insecure>

When using the secure mode, temporarily disable it to allow full $CARCH bash
magic compatibility by enabling the full bash dependency solver. If potentially
harmful code using sudo is detected, a notice will be shown before sourcing.

=item B<--asroot>

When building AUR package(s) as root, allow makepkg to run as root user.

=back


=head1 CONFIG FILE

=over 4

=item B<system config>

Pacaur honors a system-wide config file which will be looked for first at

  $XDG_CONFIG_DIRS/pacaur/config

and falling back to

  /etc/xdg/pacaur/config

=item B<user config>

User-defined configuration files overriding the general settings will be looked
for first at

  $XDG_CONFIG_HOME/pacaur/config

and falling back to

  $HOME/.config/pacaur/config

=item B<other config>

In addition, pacaur fully honors cower config file and makepkg environment
variables. See B<cower>(1) and B<makepkg>(8).

=back

=head1 CONFIG OPTIONS

The available options are:

=over 4

=item B<builddir>

Define the build directory. Default is B<$BUILDDIR>, with a fallback on
I</tmp/pacaurtmp-$USER>.

=item B<editor>

Define the editor. Default is B<$EDITOR>, with a fallback on I<vi>.

=item B<editpkgbuild>

Enable PKGBUILD editing prompt. Default is B<true>.

=item B<editinstall>

Enable install script editing prompt. Default is B<true>.

=item B<fallback>

Extend pacman commands to the AUR. Default is B<true>.

=item B<clean>

Clean build directory after operation. Default is B<true>.

=item B<cleandevel>

When clean config option is enabled, clean build directory of development
packages. Default is B<true>.

=item B<color>

Enable color output. This option requires the pacman binary I<pacman-color> to
be installed. Default is B<false>.

=item B<secure>

Use cower's internal dependency solver instead of the full bash solver to
enhance security. This breaks compatibility with I<$CARCH> bash magic and
PKGBUILDs using the $CARCH makepkg variable will not be correctly handled
anymore. In normal mode, a notice will however be shown before sourcing if
potentially harmful code using sudo is detected. Default is B<false>.

=item B<sudoloop>

Prevent sudo timeout. This option overrides the system-wide sudo configuration.
Default is B<false>.

=back

=head1 SEE ALSO

B<cower>(1), B<pacman>(8), B<makepkg>(8)


=head1 AUTHOR

Remy Marquis E<lt>remy.marquis@gmail.comE<gt>

